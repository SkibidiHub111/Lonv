local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer

repeat task.wait() until player.Character and player.Character:FindFirstChild("HumanoidRootPart")
local char = player.Character
local humanoid = char:WaitForChild("Humanoid")
local hrp = char:FindFirstChild("HumanoidRootPart")
local Cash = player:WaitForChild("leaderstats"):WaitForChild("Cash")

local function findNPC(name)
    for _, model in ipairs(workspace:GetDescendants()) do
        if model:IsA("Model") and model.Name == name then
            local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
            if root then return model, root end
        end
    end
end

local function followAndHoldE(root, model)
    local holding = true
    task.spawn(function()
        while holding and model and model.Parent do
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
            task.wait(0.2)
        end
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
    end)
    local conn = RunService.Heartbeat:Connect(function()
        if not model or not model.Parent then
            holding = false
            conn:Disconnect()
            return
        end
        humanoid:MoveTo(root.Position + Vector3.new(0, 0, -2))
    end)
end

for moneyValue, data in pairs(getgenv().Config.BuyIfMoney) do
    if data.Enable and Cash.Value == moneyValue then
        for _, brainrotName in ipairs(data.Brainrots) do
            local model, root = findNPC(brainrotName)
            if model and root then
                followAndHoldE(root, model)
                repeat task.wait() until not model or not model.Parent
                task.wait(0.5)
            end
        end
    end
end

task.spawn(function()
	while true do
		for i = 1, 10 do
			pcall(function()
				ReplicatedStorage:WaitForChild("Packages")
					:WaitForChild("Net")
					:WaitForChild("RE/PlotService/ClaimCoins")
					:FireServer(i)
			end)
			task.wait(0.1)
		end
		task.wait(5)
	end
end)

if not getgenv().Config or not getgenv().Config["Base Lock"] then return end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

local plotsFolder = workspace:FindFirstChild("Plots")
local playerPlot = nil
local lteInstances = {}
local espThread = nil
local WALK_DISTANCE = 70
local walkCooldown = {}

local function findPlayerPlot()
    if not plotsFolder then return nil end
    for _, plot in pairs(plotsFolder:GetChildren()) do
        local yourBase = plot:FindFirstChild("YourBase", true)
        if yourBase and yourBase:IsA("BoolValue") and yourBase.Value == true then
            return plot
        end
    end
    return nil
end

local function getDistance(pos)
    return (RootPart.Position - pos).Magnitude
end

local function createESP(plot, mainPart)
    if lteInstances[plot.Name] then
        lteInstances[plot.Name]:Destroy()
    end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlotESP_" .. plot.Name
    billboard.Size = UDim2.new(0, 180, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 5, 0)
    billboard.AlwaysOnTop = true
    billboard.Adornee = mainPart
    billboard.MaxDistance = 1000
    billboard.Parent = plot

    local frame = Instance.new("Frame")
    frame.Name = "Frame"
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 0.8
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    frame.BorderSizePixel = 0
    frame.Parent = billboard

    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -10, 1, -10)
    label.Position = UDim2.new(0, 5, 0, 5)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextStrokeTransparency = 0.5
    label.TextStrokeColor3 = Color3.new(0, 0, 0)
    label.Parent = frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = frame

    lteInstances[plot.Name] = billboard
    return billboard
end

playerPlot = findPlayerPlot()

if espThread then espThread:Disconnect() end

espThread = RunService.RenderStepped:Connect(function()
    if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then return end

    Character = Player.Character
    RootPart = Character:FindFirstChild("HumanoidRootPart")
    Humanoid = Character:FindFirstChild("Humanoid")
    if not RootPart or not Humanoid then return end
    if not plotsFolder then return end

    if not playerPlot or not playerPlot:IsDescendantOf(plotsFolder) then
        playerPlot = findPlayerPlot()
    end

    for _, plot in pairs(plotsFolder:GetChildren()) do
        local purchases = plot:FindFirstChild("Purchases")
        local plotBlock = purchases and purchases:FindFirstChild("PlotBlock")
        local mainPart = plotBlock and plotBlock:FindFirstChild("Main")
        local billboardGui = mainPart and mainPart:FindFirstChild("BillboardGui")
        local timeLabel = billboardGui and billboardGui:FindFirstChild("RemainingTime")

        if mainPart and timeLabel then
            local billboard = lteInstances[plot.Name] or createESP(plot, mainPart)
            local frame = billboard:FindFirstChild("Frame")
            local label = frame and frame:FindFirstChild("Label")

            local isUnlocked = (timeLabel.Text == "0s")
            local dist = getDistance(mainPart.Position)

            if label then
                label.Text = isUnlocked and "Unlocked" or ("Locked: " .. timeLabel.Text)
                if playerPlot and plot == playerPlot then
                    label.TextColor3 = Color3.fromRGB(0, 255, 0)
                elseif isUnlocked then
                    label.TextColor3 = Color3.fromRGB(255, 50, 50)
                else
                    label.TextColor3 = Color3.fromRGB(255, 255, 0)
                end
            end

            if isUnlocked and dist <= WALK_DISTANCE then
                local now = tick()
                local lastWalk = walkCooldown[plot] or 0
                if now - lastWalk >= 3 then
                    walkCooldown[plot] = now
                    Humanoid:MoveTo(mainPart.Position)
                end
            end
        else
            if lteInstances[plot.Name] then
                lteInstances[plot.Name]:Destroy()
                lteInstances[plot.Name] = nil
            end
        end
    end
end)
